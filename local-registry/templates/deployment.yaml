apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "local-registry.fullname" . }}
  namespace: {{ .Values.namespace | default .Release.Namespace }}
  labels:
    {{- include "local-registry.labels" . | nindent 4 }}
    {{- with .Values.podAnnotations }}
    annotations:
      {{- toYaml . | nindent 4 }}
      {{- end }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "local-registry.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "local-registry.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "local-registry.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - /bin/registry
            - serve
            - /etc/docker/registry/config.yml
          ports:
            - name: http
              containerPort: 5000
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
#          env:
#            - name: "REGISTRY_HTTP_ADDR"
#              valueFrom:
#                secretKeyRef:
#                  key: httpAddress
#                  name: "{{ $.Release.Name }}-tls-secret"
#            - name: "REGISTRY_HTTP_TLS_CERTIFICATE"
#              valueFrom:
#                secretKeyRef:
#                  key: httpTlsCertificate
#                  name: "{{ $.Release.Name }}-tls-secret"
#            - name: "REGISTRY_HTTP_TLS_KEY"
#              valueFrom:
#                secretKeyRef:
#                  key: httpTlsKey
#                  name: "{{ $.Release.Name }}-tls-secret"
      {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
